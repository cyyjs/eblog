body {
    font-family: 'SF Pro SC', 'SF Pro Text', 'SF Pro Icons', 'PingFang SC', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
    background-color: #eee;
}

.icon {
    width: 1em;
    height: 1em;
    vertical-align: -0.15em;
    fill: currentColor;
    overflow: hidden;
}

.drag {
    -webkit-app-region: drag;
}

.nodrag {
    -webkit-app-region: no-drag;
}

#left-nav {
    .mu-elevation-16 {
        box-shadow: none;
    }
    .mu-item {
        padding: 0 10px;
    }
    .mu-list>li {
        margin: 5px 0;
    }
}

#editor {
    .v-note-wrapper {
        z-index: inherit;
        & .v-note-op.shadow {
            z-index: 1502;
        }
    }
    & .content-input-wrapper,
    & .v-show-content {
        padding-top: 75px;
    }
    &>div {
        width: 75%;
        height: 100vh;
    }
    &>.title-input {
        width: 69%;
        background-color: #fff;
        font-size: 1.2rem;
        position: absolute;
        height: initial;
        z-index: 1501;
        top: 40px;
        padding: 25px 25px 0 25px;
        &>div {
            padding-bottom: 10px;
        }
    }
    .add-image-link-wrapper .add-image-link {
        padding: 20px;
    }
}

#privewEditor .v-note-wrapper .v-note-panel.shadow,
.v-note-wrapper .v-note-op.shadow {
    box-shadow: none;
}

.icon-badge>em {
    background: rgba(0, 0, 0, 0.2);
    margin-left: 10px;
    margin-right: -5px;
}

.no-border {
    .mu-input-line,
    .mu-input-focus-line {
        display: none;
    }
    .mu-select-action {
        padding: 0;
    }
    .mu-text-field-input {
        background-color: #eee;
        border-radius: 15px;
        padding-left: 30px;
    }
}

.top-head .mu-flat-button.mu-button-small .mu-button-wrapper {
    padding: 0;
}

.top-head .search.mu-input__focus {
    width: 230px;
}

.top-head+div {
    padding: 20px 40px;
    padding-top: 45px;
    height: 100vh;
}

.ellipsis1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.ellipsis2 {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}

.left {
    float: left;
}

code {
    color: #476582;
    padding: 0.25rem 0.5rem;
    margin: 0;
    font-size: 0.85em;
    background-color: rgba(27, 31, 35, 0.05);
    border-radius: 3px;
    font-family: source-code-pro, Menlo, Monaco, Consolas, Courier New, monospace;
}

.markdown-body pre,
.markdown-body pre[class*='lang-'] {
    padding: 10px;
    font-family: Consolas, Monaco, Andale Mono, Ubuntu Mono, monospace;
    position: relative;
    line-height: 1.4;
    margin: 0.85rem 0;
    background-color: #282c34;
    border-radius: 6px;
    code {
        overflow: auto;
        display: block;
        padding-top: 0.5rem;
        color: #fff;
        background-color: transparent;
        border-radius: 0;
    }
}

pre[class*='lang-']:before {
    content: ' ';
    position: absolute;
    z-index: 3;
    top: 0.8em;
    right: 1em;
    font-size: 0.75rem;
    color: hsla(0, 0%, 100%, 0.4);
}

$lang_list: ( javascript, js, typescript, ts, markup, vue, markdown, md, ruby, rb, python, py, bash, shell, sh, css, html, sass, scss, less, stylus, go, java, c, yaml, json);
$lang_map: ( javascript: js, typescript: ts, markup: html, vue: html, markdown: md, ruby: rb, python: py, bash: sh);
@function getlang($map, $lang) {
    @if not map-has-key($map, $lang) {
        @return ''+$lang;
    }
    @else {
        @return ''+map-get($map, $lang);
    }
}

@each $lang in $lang_list {
    pre[class~='lang-#{$lang}']:before {
        content: getlang($lang_map, $lang);
    }
}